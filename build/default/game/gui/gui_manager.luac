
ø«
◊Zlocal stts = require("main.settings")
local color = require("utils.color_convert")
local hh = require("main.hashes")
local M ={}

M.guiIsOnScreen		= false
M.nodes 			= {}  --—Ö—ç–Ω–¥–ª—ã –≤—Å–µ—Ö –Ω–æ–¥ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è
M.scriptRoot		= nil --–Ω–æ–¥–∞ –≤ –∫–æ—Ç–æ—Ä—É—é —Ä–∏—Å—É—é—Ç—Å—è –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç–∏–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞
M.scriptElements 	= {}  --–¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ–∫–∞–∑—ã–≤–∞–µ–º—ã—Ö –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–∫—Ä–∏–ø—Ç–∞
M.codeChips 		= {}  --—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–æ–¥–∞—Ö –∫–æ–¥–∞
M.chipsDeltaY		= 60  --–ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –º–µ–∂–¥—É –Ω–æ–¥–∞–º–∏ –Ω–∞ –ø–∞–Ω–µ–ª–∏ —Å–∫—Ä–∏–ø—Ç–∞ (–º–µ–∂–¥—É —Ü–µ–Ω—Ç—Ä–∞–º–∏ –Ω–æ–¥)	

M.cursorPos			= vmath.vector3(0, 0, 0.7)
M.curNode			= nil --—ç—Ç–æ –≤—ã–±—Ä–∞–Ω–Ω–∞—è –Ω–æ–¥–∞ (—Ç–∞, —á—Ç–æ —Ç–∞—â–∏—Ç –∏–≥—Ä–æ–∫) —Ç–∞–∫–∂–µ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫–∞–∫ —Ñ–ª–∞–≥ —Ç–æ–≥–æ, —á—Ç–æ –Ω–æ–¥–∞ –≤ —Ä—É–∫–∞—Ö (–∫–æ–≥–¥–∞ –Ω–µ nil)
M.curNodeStruct		= nil

M.arrows			={} --—Å—Ç—Ä–µ–ª–æ—á–∫–∏ –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –≤ –¥–∂–∞–º–ø–∞—Ö

M.curNodeMoving		= false 
M.curNodePos		= vmath.vector3(0, 0, 0.5)  --—ç–∫—Ä–∞–Ω–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –Ω–æ–¥—ã
M.prevCursorPos 	= vmath.vector3(0, 0, 0.5)	--–¥–ª—è —Ä–∞—Å—á—ë—Ç–æ–≤ —Ç–≤–∏–Ω–∏–Ω–≥–∞

M.commandbuttonWasPressed =false
M.clickedButtonPos = vmath.vector3(0, 0, 0.5)

M.repairMenuOpened = false
M.betterTexts		={}
M.worstTexts		={}
M.yammer 			={}
M.curDialog			={}

M.colorsTable 		= {  -- –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤–æ–π –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞—Ü–∏–∏ –Ω–æ–¥
	go_left = vmath.vector4(0.5, 0.5, 0.4, 1),
	go_right = vmath.vector4(0.5, 0.5, 0.4, 1),
	go_up = vmath.vector4(0.5, 0.5, 0.4, 1),
	pick_from_point = vmath.vector4(0.5, 0.5, 0.4, 1),
	go_to_point = vmath.vector4(0.5, 0.5, 0.7, 1),
	
	drop_to_point = vmath.vector4(0.8, 0.5, 0.5, 1),
	combine = vmath.vector4(0.2, 0.8, 0.2, 1),
	pick = vmath.vector4(0.7, 0.7, 0.5, 1),
	drop = vmath.vector4(0.7, 0.7, 0.5, 1),
	
	jump = vmath.vector4(0.8, 0.5, 0.0, 1),
	if_fail =vmath.vector4(0.7, 0.7, 0.5, 1),
	jumpTarget = vmath.vector4(0.8, 0.5, 0.0, 1),
}


M.btnNamesTable = {
	go_left = "step left",
	go_right= "step right",
	go_up ="step up",
	go_down = "step down",
	
	go_to_point = "go to", 
	pick_from_point = "pick from",
	drop_to_point = "drop to",
	stop = "stop",
	combine = "mix",
	pick = "pick from left",
	drop = "drop to right",
	jump = "jump",
	if_fail = "if fail",
	jumpTarget = "",
	if_failTarget ="",
}

-------------------------------------------
--–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è 
function M.initCodePanel(rootNode)
	M.guiPosition = gui.get_screen_position(rootNode)
	print(M.guiPosition)
end

-------------------------------------------
--–ø–æ–ª—É—á–∞–µ—Ç –ø–æ–∑–∏—Ü–∏—é –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–Ω–æ –≤–æ—Ç–∫–Ω—É—Ç—å –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
--–∏ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
function M.addCodeChip(name, stepNum, pos, parentHandle, numLabel, argHandle, arg, chipLabel, argLabel )
	local newElement 		= {}	
	newElement.handle 		= parentHandle	--—Å—Å—ã–ª–∫–∞ –Ω–∞ –Ω–æ–¥—É
	newElement.numLabel 	= numLabel      --—Å—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤—É—é –Ω–æ–¥—É —Å –Ω–æ–º–µ—Ä–æ–º —Å—Ç—Ä–æ–∫–∏ (—á—Ç–æ–± –º–µ–Ω—è—Ç—å –ø–æ –Ω—É–∂–¥–µ)
	newElement.argHandle 	= argHandle		--—Å—Å—ã–ª–∫–∞ –Ω–∞ –Ω–æ–¥—É —Å –∫–Ω–æ–ø–∫–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –∏–ª–∏ nil
	newElement.num 			= stepNum  		--–Ω–æ–º–µ—Ä —à–∞–≥–∞ (–ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –≤ —Å—Ç–µ–∫–µ)
	newElement.name 		= name			--–∏–º—è 
	newElement.chipLabel 	= chipLabel		--–Ω–∞–¥–ø–∏—Å—å –Ω–∞ –∫–Ω–æ–ø–∫–µ, —Ö—ç–Ω–¥–ª
	newElement.argLabel		= argLabel		--–Ω–∞–ø–∏—Å—å –Ω–∞ –∫–Ω–æ–ø–∫–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞, —Ö—ç–Ω–¥–ª
	newElement.pairID 		= nil
	newElement.weight		= 0.1

	if arg then 
		newElement.arg = vmath.vector3(arg.x, arg.y, arg.z) -- –∞—Ä–≥—É–º–µ–Ω—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ  vector3 , –∏–ª–∏ nil
		newElement.pairID = arg.z
	end

	--[[
	if (stepNum % 2 == 0) then --—Å–¥–µ–ª–∞–µ–º –ª–µ–≥–∫—É—é —á–µ—Ä–µ–∑–ø–æ–ª–æ—Å–∏—Ü—É, —á—Ç–æ–± –ª—É—á—à–µ —á–∏—Ç–∞–ª–∞—Å—å –ø–∞–Ω–µ–ª—å —Å –∫–æ–¥–æ–º
		newElement.bgColor =  vmath.vector4(0,0,0, 0.05)
	else			
		newElement.bgColor =  vmath.vector4(0,0,0, 0.10)
	end
	--]]
	
	newElement.bgColor =  vmath.vector4(0,0,0,0)
	newElement.pos = vmath.vector3(pos.x, pos.y, pos.z) --–ø–æ–∑–∏—Ü–∏—è –Ω–æ–¥—ã –¥–ª—è –≤—Å—è–∫–∏—Ö —Ç–≤–∏–Ω–æ–≤ –∏ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–π

	local hType
	if string.sub(name,1, 10) == "jumpTarget" then
		hType =  hash("jumpTarget")	
	elseif string.sub(name,1, 4) == "jump" then
		hType =  hash("jump")	
	elseif 	name ==  "go_to_point" or name =="pick_from_point" or name == "drop_to_point" then
		hType =  hh.pointed
	elseif string.sub(name,1, 13) == "if_failTarget" then
		hType =  hash("if_failTarget")	
	elseif string.sub(name,1, 7) == "if_fail" then
		hType =  hash("if_fail")	
	else
		hType = hash("normal")
	end	
	newElement.type = hType		--—Ç–∏–ø:  normal ,jump,  jumpTarget , pointed –≤ –≤–∏–¥–µ —Ö—ç—à–∞ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏
	
	M.codeChips[parentHandle] = newElement  --–∫–ª—é—á–æ–º –≤ —Ç–∞–±–ª–∏—á–∫–µ –±—É–¥–µ—Ç –Ω–æ–¥–∞, —á—Ç–æ–± –ø—Ä–æ—â–µ –∏—Å–∫–∞—Ç—å –ø–æ –∫–ª–∏–∫—É
end


-------------------------------------------
function M.deleteCodeChip(codeChip)
	--–ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä—É
	local pairID
	if codeChip.arg then
		if  codeChip.arg.z ~= 0 then 
			pairID = codeChip.arg.z
		end
	end	
		
	if pairID then --–µ—Å–ª–∏ —ç—Ç–æ –ø–∞—Ä–∞ –∫–æ–º–∞–Ω–¥,—Ç–∏–ø–∞ –¥–∂–∞–º–ø–∞ —Ç–æ —É–¥–∞–ª–∏–º –æ–±–µ
		for i = #settings.curMob.commands, 1, -1 do
			if settings.curMob.commands[i].arg then
				if settings.curMob.commands[i].arg.z== pairID then
					table.remove(settings.curMob.commands, i)
				end
			end
		end
		--[[
		if pairNum > codeChip.num then
			table.remove(settings.curMob.commands, pairNum)
			table.remove(settings.curMob.commands, codeChip.num)
		else
			table.remove(settings.curMob.commands, codeChip.num)
			table.remove(settings.curMob.commands, pairNum)
		end
		--]]
		
		--–∏ —Å—Ç—Ä–µ–ª–æ—á–∫—É
		for k, v in pairs(M.arrows) do
			if k == pairID then
				gui.delete_node(v)
				v= nil
			end
		end
		msg.post("/gui_obj#gui", hash("setSpacerPos"), {indx = codeChip.num - 2})
		
	else --–∏–Ω–∞—á–µ —É–¥–∞–ª–∏–º —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É
		table.remove(settings.curMob.commands, codeChip.num)
		msg.post("/gui_obj#gui", hash("setSpacerPos"), {indx = codeChip.num - 1})
	end
	
	msg.post("/gui_obj#gui", hash("loadMobCommands"), {commands = settings.curMob.commands, paused = settings.curMob.stopped})
	--msg.post("/go#script", hash("removeCommand"), {command_num = codeChip.num} )
	
end

local jumpColorDelta =0
-------------------------------------------
function M.pickColor(cName)
	local color = M.colorsTable[cName]
	--if color == nil then color =vmath.vector4(0.5, 0.5, 0.7, 1) end
	--[[
	if cName == "jump" or cName == "jumpTarget" then
		jumpColorDelta = jumpColorDelta + 0.02
		color.y = color.y + jumpColorDelta
	end
	--]]
	
	if color == nil then 
		color = M.colorsTable["default"] 
		print("–î–ª—è –∫–æ–º–∞–Ω–¥—ã ".. cName .. "  —Ü–≤–µ—Ç –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω, –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –≤ –ì—É–≥–ª–æ—Ç–∞–±–ª–∏—á–∫—É –Ω–∞ –∑–∞–∫–ª–∞–¥–∫—É Colors")
	end
	return color
end

--------------------------------------------
function M.getButtonName(commandName)
	if M.btnNamesTable[commandName] then
		return  M.btnNamesTable[commandName]
	else
		print("–Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —Å –∫–æ–º–∞–Ω–¥–æ–π "..commandName.. ", –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ gm.btnNamesTable")
		return  commandName
	end
end

--------------------------------------------
--[[
function M.findJumpTarget(pairID)
	if pairID == nil then return nil end
	
	local result 
	local hType =  hash("jumpTarget")
	local hType1 =  hash("if_failTarget")
	for k, val in pairs(M.codeChips) do
		if val.pairID == pairID and val.type == hType or val.type == hType1 then
			result =  val
		end
	end
	if result == nil then print("–Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ–º–∞–Ω–¥—É —Å ID ".. pairID) end
	return result
end
--]]
-------------------------------------------
function M.updateJumpPair(jumpTargetStruct)
	local jumpID = jumpTargetStruct.arg.z
	for key, chip in pairs(M.codeChips) do
		if chip.arg then
			if chip.arg.z == jumpID then 
				--–Ω–∞–π–¥–µ–Ω–∞ –ø–∞—Ä–∞ –æ—Ç —ç—Ç–æ–≥–æ –¥–∂–∞–º–ø —Ç–∞—Ä–≥–µ—Ç–∞
				if chip.type == hh.jump or chip.type == hh.if_fail then
					gui.set_text(chip.chipLabel, chip.name .." to "..jumpTargetStruct.num )
				end				
			end
		end	
	end
end

--------------------------------------------
function M.updateArrows()
	print("arrowsUpdate")
	local deltaX = 0
	for k, chip in pairs(M.codeChips) do	
		if chip.type == hh.jumpTarget   or  chip.type == hh.if_failTarget then
			M.setArrowSize(chip.arg.z, deltaX)
			deltaX = deltaX + 5
		end
	end
end
-------------------------------------------
function M.setArrowSize(jumpID, deltaX)	
	local size = vmath.vector3(62+deltaX,0,0)
	local yJump =0
	local yJumpTarget =0	
	local jumpArrowNode = M.arrows[jumpID]
	
	for k, chip in pairs(M.codeChips) do		
		if chip.arg then
			if chip.arg.z == jumpID  then
				if chip.type == hh.jump or chip.type == hh.if_fail then
					yJump = chip.pos.y
				elseif 	chip.type == hh.jumpTarget or chip.type == hh.if_failTarget then
					yJumpTarget = chip.pos.y
				end
			end
		end
	end	
	
	if jumpArrowNode then 
		local pos = gui.get_position(jumpArrowNode)
		if yJump < yJumpTarget then			
			pos.y	= yJump-15
			size.y	= yJumpTarget+32 - yJump	
		else
			pos.y	= yJumpTarget-15
			size.y	= yJump+32 - yJumpTarget	
		end
		gui.set_size(jumpArrowNode , size)
		gui.set_position(jumpArrowNode, pos)
	end
	
end

--------------------------------------------
function M.updateMobScriptFromGuiState(curMobCommands)
	--pprint(curMobCommands)
	for k, chip in pairs(M.codeChips) do		
		curMobCommands[chip.num].name = chip.name
		curMobCommands[chip.num].weight = chip.weight		
		if chip.arg then 
			--
			if curMobCommands[chip.num].arg then
				curMobCommands[chip.num].arg.x = chip.arg.x
				curMobCommands[chip.num].arg.y = chip.arg.y
				curMobCommands[chip.num].arg.z = chip.arg.z
			else
				curMobCommands[chip.num].arg = vmath.vector3(chip.arg.x, chip.arg.y, chip.arg.z)
			end
			--
		else
			curMobCommands[chip.num].arg = nil
		end		
	end	
	--pprint(curMobCommands)
end

--------------------------------------------
function M.getTextForDialog() 
	local t1,t2,t3
	M.curDialog = {}
	t1 = M.yammer[math.random(1, #M.yammer)].phrase	
	M.curDialog.t1 = t1
	

	if math.random() > 0.5 then
		t2 = M.betterTexts[math.random(1, #M.betterTexts)].name
		t3 = M.worstTexts [math.random(1, #M.worstTexts)].name
		M.curDialog.worst  = 2
		M.curDialog.t2 = t2
		M.curDialog.t3 = t3
	else
		t2 = M.worstTexts [math.random(1, #M.worstTexts)].name
		t3 = M.betterTexts[math.random(1, #M.betterTexts)].name		
		M.curDialog.worst  = 1  --–Ω–æ–º–µ—Ä –ø–ª–æ—Ö–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
		M.curDialog.t2 = t2
		M.curDialog.t3 = t3
	end
	
	return t1,t2,t3
end

-------------------------------------------
function M.deleteScriptElement(pos)
end

-------------------------------------------
--–æ—á–∏—Å—Ç–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–æ–π —Å–∫—Ä–∏–ø—Ç–∞ –∏–ª–∏ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ –≤—ã–¥–µ–ª–µ–Ω–∏—è —Å –º–æ–±–∞
--—á–∏—Å—Ç–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤–∏–∑—É–∞–ª—å–Ω–∞—è —á–∞—Å—Ç—å! –°–∞–º —Å–∫—Ä–∏–ø—Ç —É –º–æ–±–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π.
function M.clearScript()
end

-------------------------------------------
--–∑–∞–≥—Ä—É–∑–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞
function M.loadScript(mob)
end

-------------------------------------------
return M/game/gui/gui_manager.lua¢6LJ =/game/gui/gui_manager.lua{  G-  6 9  B= 6 -  9 BK  ¿
printget_screen_positionguiguiPositionM rootNode   ù 	 m‚O-4	  = 	=	=	=	= 	=	=	+
  =
	*
  =
	  X
	Ä6

 9

999B
=
		9
=
	6

 9

)  )  )  )  B
=
	6

 9

999B
=
	+
  6 9  ) )
 B XÄ6 ' B
 X4Ä6 9  ) ) B XÄ6 ' B
 X'Ä  XÄ  XÄ  XÄ-  9
XÄ6 9  ) ) B XÄ6 ' B
 XÄ6 9  ) ) B XÄ6 ' B
 XÄ6 ' B
 =
	- 9<	K  ¿¿codeChips	typenormalif_failif_failTargetpointeddrop_to_pointpick_from_pointgo_to_point	jump	hashjumpTargetsubstringposvector4bgColorzyxvector3
vmathargweightpairIDargLabelchipLabel	namenumargHandlenumLabelhandleµÊÃôô≥Ê˝		

     !!!!!!"""########$$$$$%%%%%%%%&&&&&((((*,,,-hh M name  nstepNum  npos  nparentHandle  nnumLabel  nargHandle  narg  nchipLabel  nargLabel  nnewElement lhType &F Î 	gúÄ,+  9    XÄ9  9  XÄ9  9  X8Ä6 99 ) )ˇˇMÄ6 9989   XÄ6 9989 9 XÄ6 96 99 BOÈ6 -  9BHÄ XÄ6	 9
 B+  FR˜6 9' 6 ' B5 9 =BXÄ6 96 999 B6 9' 6 ' B5 9 =B6 9' 6 ' B5 6 99=6 99=BK  ¿pausedstopped  loadMobCommands  	indx  numsetSpacerPos	hash/gui_obj#gui	postmsgdelete_nodeguiarrows
pairsremove
tablecommandscurMobsettingszarg 		







""""""""""""%%%%%%%&&&&&&&&&&&)))))))))))))))),M codeChip  hpairID f  i 
 
 
k v   ù  "∞-  9 8   X	Ä-  9 96 '   ' &BL ¿Ñ  —Ü–≤–µ—Ç –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω, –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –≤ –ì—É–≥–ª–æ—Ç–∞–±–ª–∏—á–∫—É –Ω–∞ –∑–∞–∫–ª–∞–¥–∫—É Colors–î–ª—è –∫–æ–º–∞–Ω–¥—ã 
printdefaultcolorsTable

M cName  color  §  #¬-  9 8   XÄ-  9 8 L XÄ6 '   ' &BL  K  ¿N, –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ gm.btnNamesTableR–Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —Å –∫–æ–º–∞–Ω–¥–æ–π 
printbtnNamesTableM commandName   √  #[›9  96 -  9BHÄ9   XÄ9 9 XÄ9- 9 XÄ9- 9 XÄ6 99	9	
'
 9 &		BFRÂK  ¿¿num	 to 	namechipLabelset_textguiif_fail	jump	typecodeChips
pairszargM hh jumpTargetStruct  $jumpID !  key chip   ò  	
@Ï	6   ' B )   6 -  9BHÄ9- 9 XÄ9- 9 XÄ-  999	  B   FRÌK  ¿¿zargsetArrowSizeif_failTargetjumpTarget	typecodeChips
pairsarrowsUpdate
print
	M hh deltaX   k chip   Ö PØ˜6  9 )  )  B)  )  -  98 6 -  9BH	 Ä9
  XÄ9
9  XÄ9
- 9 XÄ9
- 9	 XÄ9

9XÄ9
- 9 XÄ9
- 9 XÄ9

9F	R	ﬁ  XÄ6 9 B XÄ=!=XÄ=!=6 9 	 B6 9 	 BK  ¿¿set_positionset_sizeget_positionguiif_failTargetjumpTargetyposif_fail	jump	typezargcodeChips
pairsarrowsvector3
vmath|@										


M hh jumpID  QdeltaX  Qsize JyJump IyJumpTarget HjumpArrowNode E# # #k  chip   pos ( ô  <dô6  -  9BH4Ä98 9=98 9=9  X%Ä98 9  XÄ98 999=98 999=98 999=XÄ98 6	 9
999	9		9
9

B=XÄ98 +  =FR K  ¿vector3
vmathzyxargweight	namenumcodeChips
pairs						






M curMobCommands  =7 7 7k 4chip  4 ≈  ]o∞,  -  4  = -  96 9) -  9 B89 -  9 = 6 9B*   X!Ä-  96 9) -  9 B89-  96 9) -  9 B89-  9 ) =	-  9 =
-  9 =X Ä-  96 9) -  9 B89-  96 9) -  9 B89-  9 ) =	-  9 =
-  9 =    J ¿t3t2
worstworstTexts	namebetterTextst1phraserandom	mathyammercurDialogÄÄÄˇ											



M t1 \t2  \t3  \     …K  pos        œK       ‘K  mob   ® 
 E«Ω ÿ6   ' B 6  ' B6  ' B4  + =4  =+  =4  =4  =)< =	6 9)  )  *  B=
+  =+  =4  =+ =6 9)  )  * B=6 9)  )  * B=+ =6 9)  )  * B=+ =4  =4  =4  =4  =5 6 9* * * )	 B=6 9* * * )	 B=6 9* * * )	 B=6 9* * * )	 B= 6 9* * *  )	 B=!6 9* * * )	 B="6 9* * * )	 B=#6 9*  *  * )	 B=$6 9*  *  * )	 B=%6 9* * )  )	 B=&6 9*  *  * )	 B='6 9* * )  )	 B=(=5* =)3, =+3. =-30 =/)  32 =134 =336 =538 =73: =93< =;3> ==3@ =?3B =A3D =C2  ÄL  loadScript clearScript deleteScriptElement getTextForDialog  updateMobScriptFromGuiState setArrowSize updateArrows updateJumpPair getButtonName pickColor deleteCodeChip addCodeChip initCodePanel go_leftstep leftgo_downstep downcombinemix	pickpick from leftjumpTargetgo_rightstep right	jump	jumpif_failif failgo_to_point
go to	dropdrop to rightif_failTargetdrop_to_pointdrop to
go_upstep uppick_from_pointpick from	stop	stopbtnNamesTablejumpTargetif_fail	jump	drop	pickcombinedrop_to_pointgo_to_pointpick_from_point
go_upgo_rightgo_left  vector4colorsTablecurDialogyammerworstTextsbetterTextsrepairMenuOpenedclickedButtonPoscommandbuttonWasPressedprevCursorPoscurNodePoscurNodeMovingarrowscurNodeStructcurNodevector3
vmathcursorPoschipsDeltaYcodeChipsscriptElementsscriptRoot
nodesguiIsOnScreenmain.hashesutils.color_convertmain.settingsrequireÕô≥ÊÊÃôˇÄÄÄˇµÊÃôô≥Ê˛µÊÃôô≥¶ˇµÊÃôô≥¶˛                	 	 
 
                                                     ! ! ! ! ! ! ! ! " " " " " " " " # # # # # # # # $ $ $ $ $ $ $ $ % % % % % % % % ' ' ' ' ' ' ' ' ( ( ( ( ( ( ( ( ) ) ) ) ) ) ) ) * * * * * * * * , , , , , , , , - - - - - - - - . . . . . . . . / 2 C J G | O ¨ Ä Æ ø ∞ … ¬ È › ı Ï ˜ -F0JIPOUTXXstts ƒcolor ¡hh æM ΩjumpColorDelta ß  "¢6LJ=/game/gui/gui_manager.lua{  G-  6 9  B= 6 -  9 BK  ¿
printget_screen_positionguiguiPositionM rootNode   ù 	 m‚O-4	  = 	=	=	=	= 	=	=	+
  =
	*
  =
	  X
	Ä6

 9

999B
=
		9
=
	6

 9

)  )  )  )  B
=
	6

 9

999B
=
	+
  6 9  ) )
 B XÄ6 ' B
 X4Ä6 9  ) ) B XÄ6 ' B
 X'Ä  XÄ  XÄ  XÄ-  9
XÄ6 9  ) ) B XÄ6 ' B
 XÄ6 9  ) ) B XÄ6 ' B
 XÄ6 ' B
 =
	- 9<	K  ¿¿codeChips	typenormalif_failif_failTargetpointeddrop_to_pointpick_from_pointgo_to_point	jump	hashjumpTargetsubstringposvector4bgColorzyxvector3
vmathargweightpairIDargLabelchipLabel	namenumargHandlenumLabelhandleµÊÃôô≥Ê˝		

     !!!!!!"""########$$$$$%%%%%%%%&&&&&((((*,,,-hh M name  nstepNum  npos  nparentHandle  nnumLabel  nargHandle  narg  nchipLabel  nargLabel  nnewElement lhType &F Î 
gúÄ,+  9    XÄ9  9  XÄ9  9  X8Ä6 99 ) )ˇˇMÄ6 9989   XÄ6 9989 9 XÄ6 96 99	 BOÈ6 -  9BHÄ XÄ6	 9
	 B+  FR˜6 9' 6 ' B5 9 =BXÄ6 96 999 B6 9' 6 ' B5 9 =B6 9' 6 ' B5 6 99=6 99=BK  ¿pausedstopped  loadMobCommands  	indx  numsetSpacerPos	hash/gui_obj#gui	postmsgdelete_nodeguiarrows
pairsremove
tablecommandscurMobsettingszarg 		







""""""""""""%%%%%%%&&&&&&&&&&&)))))))))))))))),M codeChip  hpairID f  i 
 
 
k v   ù  "∞-  9 8   X	Ä-  9 96 '   ' &BL ¿Ñ  —Ü–≤–µ—Ç –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω, –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –≤ –ì—É–≥–ª–æ—Ç–∞–±–ª–∏—á–∫—É –Ω–∞ –∑–∞–∫–ª–∞–¥–∫—É Colors–î–ª—è –∫–æ–º–∞–Ω–¥—ã 
printdefaultcolorsTable

M cName  color  §  #¬-  9 8   XÄ-  9 8 L XÄ6 '   ' &BL  K  ¿N, –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ gm.btnNamesTableR–Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —Å –∫–æ–º–∞–Ω–¥–æ–π 
printbtnNamesTableM commandName   √  #[›9  96 -  9BHÄ9   XÄ9 9 XÄ9- 9 XÄ9- 9 XÄ6 99		9

' 9 &

BFRÂK  ¿¿num	 to 	namechipLabelset_textguiif_fail	jump	typecodeChips
pairszargM hh jumpTargetStruct  $jumpID !  key chip   ò  

@Ï	6   ' B )   6 -  9BHÄ9- 9 XÄ9- 9 XÄ-  999		  B   FRÌK  ¿¿zargsetArrowSizeif_failTargetjumpTarget	typecodeChips
pairsarrowsUpdate
print
	M hh deltaX   k chip   Ö PØ˜6  9 )  )  B)  )  -  98 6 -  9BH	 Ä9
  XÄ9
9  XÄ9
- 9 XÄ9
- 9	 XÄ9

9XÄ9
- 9 XÄ9
- 9 XÄ9

9F	R	ﬁ  XÄ6 9 B XÄ=!=XÄ=!=6 9	 
 B6 9	 
 BK  ¿¿set_positionset_sizeget_positionguiif_failTargetjumpTargetyposif_fail	jump	typezargcodeChips
pairsarrowsvector3
vmath|@										


M hh jumpID  QdeltaX  Qsize JyJump IyJumpTarget HjumpArrowNode E# # #k  chip   pos ( ô  <dô6  -  9BH4Ä98 9=98 9=9  X%Ä98 9  XÄ98 999=98 999=98 999=XÄ98 6	 9
9	9		9
9

99B=XÄ98 +  =FR K  ¿vector3
vmathzyxargweight	namenumcodeChips
pairs						






M curMobCommands  =7 7 7k 4chip  4 ≈  ]o∞,  -  4  = -  96 9) -  9 B89 -  9 = 6 9B*   X!Ä-  96 9) -  9 B89-  96 9) -  9 B89-  9 ) =	-  9 =
-  9 =X Ä-  96 9) -  9 B89-  96 9) -  9 B89-  9 ) =	-  9 =
-  9 =    J ¿t3t2
worstworstTexts	namebetterTextst1phraserandom	mathyammercurDialogÄÄÄˇ											



M t1 \t2  \t3  \     …K  pos        œK       ‘K  mob   ®  E«Ω ÿ6   ' B 6  ' B6  ' B4  + =4  =+  =4  =4  =)< =	6 9)  )  *  B=
+  =+  =4  =+ =6 9)  )  * B=6 9)  )  * B=+ =6 9)  )  * B=+ =4  =4  =4  =4  =5 6 9* * *	 )
 B=6 9* * *	 )
 B=6 9* * *	 )
 B=6 9* * *	 )
 B= 6 9* * *	  )
 B=!6 9* * *	 )
 B="6 9* * *	 )
 B=#6 9*  *  *	 )
 B=$6 9*  *  *	 )
 B=%6 9* * )	  )
 B=&6 9*  *  *	 )
 B='6 9* * )	  )
 B=(=5* =)3, =+3. =-30 =/)  32 =134 =336 =538 =73: =93< =;3> ==3@ =?3B =A3D =C2  ÄL  loadScript clearScript deleteScriptElement getTextForDialog  updateMobScriptFromGuiState setArrowSize updateArrows updateJumpPair getButtonName pickColor deleteCodeChip addCodeChip initCodePanel go_leftstep leftgo_downstep downcombinemix	pickpick from leftjumpTargetgo_rightstep right	jump	jumpif_failif failgo_to_point
go to	dropdrop to rightif_failTargetdrop_to_pointdrop to
go_upstep uppick_from_pointpick from	stop	stopbtnNamesTablejumpTargetif_fail	jump	drop	pickcombinedrop_to_pointgo_to_pointpick_from_point
go_upgo_rightgo_left  vector4colorsTablecurDialogyammerworstTextsbetterTextsrepairMenuOpenedclickedButtonPoscommandbuttonWasPressedprevCursorPoscurNodePoscurNodeMovingarrowscurNodeStructcurNodevector3
vmathcursorPoschipsDeltaYcodeChipsscriptElementsscriptRoot
nodesguiIsOnScreenmain.hashesutils.color_convertmain.settingsrequireÕô≥ÊÊÃôˇÄÄÄˇµÊÃôô≥Ê˛µÊÃôô≥¶ˇµÊÃôô≥¶˛                	 	 
 
                                                     ! ! ! ! ! ! ! ! " " " " " " " " # # # # # # # # $ $ $ $ $ $ $ $ % % % % % % % % ' ' ' ' ' ' ' ' ( ( ( ( ( ( ( ( ) ) ) ) ) ) ) ) * * * * * * * * , , , , , , , , - - - - - - - - . . . . . . . . / 2 C J G | O ¨ Ä Æ ø ∞ … ¬ È › ı Ï ˜ -F0JIPOUTXXstts ƒcolor ¡hh æM ΩjumpColorDelta ß  main.settingsutils.color_convertmain.hashes/main/settings.luac/utils/color_convert.luac/main/hashes.luac" 